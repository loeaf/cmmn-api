<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spo.cmmn.admin.comm.mapper.mysql.CommonMapper">

	
    <!-- 
		코드유형목록 조회
	-->
	<select id="selectListAllUser" parameterType="hashmap"  resultType="camelHashMap">
		SELECT USER_ID
			 , USER_NM
			 , USER_PSWD
			 , USER_SE_CD
			 , DEPT_CD
			 , JBTTL_CD
			 , JBGD_CD
			 , MOBILE_NO
			 , EML_ADDR
			 , TELNO
			 , ACS_IP_ADDR
			 , ACS_MAC_ADDR
			 , JBGD_NM
			 , DEL_YN
			 , REGR_ID
			 , REGR_IP_ADDR
			 , REG_DT
			 , CHGR_ID
			 , CHGR_IP_ADDR
			 , CHG_DT
		  FROM TN_USER
		 WHERE 1=1
		   AND DEL_YN = 'N'
		   <if test="userNm != null and userNm != ''">AND USER_NM LIKE '%' || #{userNm} || '%'</if>
	</select>
	
	<!-- 
		유저 정보 조회
	-->
	<select id="selectUser" parameterType="string"  resultType="camelHashMap">
		SELECT A.USER_ID
			 , A.USER_NM
			 , A.USER_PSWD
			 , A.USER_SE_CD
			 , B.INST_CD
		     , (SELECT C.INST_NM 
		          FROM TN_INST C
		         WHERE C.INST_CD = B.INST_CD
		           AND C.DEL_YN = 'N') AS INST_NM
			 , A.DEPT_CD
			 , B.DEPT_NM
			 , A.JBTTL_CD
			 , A.JBGD_CD
			 , A.JBGD_NM
			 , A.MOBILE_NO
			 , A.EML_ADDR
			 , A.TELNO
			 , A.ACS_IP_ADDR
			 , A.ACS_MAC_ADDR
			 , A.DEL_YN
			 , A.REGR_ID
			 , A.REGR_IP_ADDR
			 , A.REG_DT
			 , A.CHGR_ID
			 , A.CHGR_IP_ADDR
			 , A.CHG_DT
		  FROM TN_USER A, TN_ORG B
		 WHERE 1 = 1
		   AND A.DEL_YN = 'N'
		   AND A.DEPT_CD = B.DEPT_CD
		   AND A.USER_ID = #{userId}
	</select>
	
	<!-- 
		유저 권한 정보 조회
	-->
	<select id="selectUserAuthrt" parameterType="string"  resultType="camelHashMap">
		SELECT B.AUTHRT_ID
			 , B.AUTHRT_NM
			 , B.AUTHRT_DESC
			 , B.OUTSD_INST_AUTHRT_USE_YN
			 , B.DEL_YN
			 , B.REGR_ID
			 , B.REGR_IP_ADDR
			 , B.REG_DT
			 , B.CHGR_ID
			 , B.CHGR_IP_ADDR
			 , B.CHG_DT
		  FROM TN_USER_AUTHRT_GRNT A
		     , TN_AUTHRT B
		 WHERE 1=1
		   AND A.AUTHRT_ID = B.AUTHRT_ID 
		   AND A.DEL_YN = B.DEL_YN
		   AND A.DEL_YN = 'N'
		   AND A.USER_ID = #{userId}
	</select>
	
	<!-- 
		유저 메뉴 목록 조회
	-->
	<select id="selectUserMenuList" parameterType="hashmap"  resultType="camelHashMap">
		 SELECT LPAD(' ', 2*(LEVEL - 1)) || a.MENU_NM TAB_LV_MENU_NM
		      , LEVEL
		 	  , a.MENU_ID
		 	  , a.RGTR_ID
		 	  , a.REG_DT
		 	  , a.CHNRG_ID
		 	  , a.CHG_DT
		 	  , a.DEL_YN
		 	  , a.MENU_NM
		 	  , a.PGM_PATH_NM
		 	  , a.MENU_USE_YN
		 	  , a.UP_MENU_ID
		 	  , a.RGTR_IP_ADDR
		 	  , a.CHNRG_IP_ADDR
		   FROM TN_MENU a
		      , TN_AUTHRT_MENU b
		  WHERE 1=1
		    AND a.MENU_ID = b.MENU_ID 
		    AND a.DEL_YN = b.DEL_YN 
		    AND a.DEL_YN = 'N'
		    AND b.AUTHRT_ID IN (SELECT c.AUTHRT_ID
		                          FROM TN_USER_AUTHRT_GRNT c
		                         WHERE c.DEL_YN = 'N'
		                           AND c.USER_ID = #{userId})
		  START WITH a.UP_MENU_ID IS NULL
		CONNECT BY PRIOR a.MENU_ID = a.UP_MENU_ID
	</select>
	
	<!-- 
		메뉴 권한 여부 확인
	-->
	<select id="checkUserMenuAuthrt" parameterType="hashmap"  resultType="int">
		SELECT COUNT(*) AS CNT
		  FROM TN_AUTHRT_MENU A
		 WHERE 1=1
		   AND A.DEL_YN = 'N'
		   AND A.AUTHRT_ID IN (SELECT C.AUTHRT_ID
		                         FROM TN_USER_AUTHRT_GRNT C
		                        WHERE C.DEL_YN = 'N'
		                          AND C.USER_ID = #{userId})
		   AND A.MENU_ID IN (SELECT MENU_ID
						 	   FROM TN_MENU
							  WHERE DEL_YN = 'N'
							    AND PGM_PATH_NM = #{uri})
	</select>
	
	<!-- 
		트랜잭션 권한 여부 확인
	-->
	<select id="checkUserTrnscAuthrt" parameterType="hashmap"  resultType="int">
		SELECT COUNT(*) AS CNT
		  FROM TN_TRNSC tt
		     , TN_AUTHRT_TRNSC tat
		 WHERE 1=1
		   AND tt.TRNSC_ID = tat.TRNSC_ID 
		   AND tt.DEL_YN = tat.DEL_YN 
		   AND tt.DEL_YN = 'N'
		   AND tat.AUTHRT_YN = 'Y'
		   AND tt.URL_ADDR = #{uri}
		   AND tat.AUTHRT_ID IN (SELECT C.AUTHRT_ID
		                         FROM TN_USER_AUTHRT_GRNT C
		                        WHERE C.DEL_YN = 'N'
		                          AND C.USER_ID = #{userId})
	</select>
	
	
    <!-- 
		조직 목록 조회 트리 (기관 + 조직 + 사용자)
	-->
	<select id="selectDeptTreeList" parameterType="hashmap"  resultType="camelHashMap">
		SELECT LEVEL
		      , CONNECT_BY_ISLEAF AS LEAF
		      , LPAD(' ', 4*(LEVEL - 1)) || A.TREE_NM  LEVEL_TREE_NM
		      , A.TREE_CD
		      , NVL2(A.USER_ID, A.TREE_NM, A.TREE_NM || '('|| CNT ||')') AS TREE_NM 
		      , A.UP_TREE_CD
		      , CONNECT_BY_ROOT A.TREE_CD AS INST_CD
		      , CONNECT_BY_ROOT A.TREE_NM AS INST_NM
		      , A.DEPT_CD
		      , (SELECT DEPT_NM FROM TN_ORG WHERE DEPT_CD = A.DEPT_CD) DEPT_NM
		      , A.JBGD_CD
		      , A.JBGD_NM
		      , A.USER_ID
		      , A.USER_NM
		      , A.TELNO
		   FROM (SELECT INST_CD AS TREE_CD
				      , INST_NM AS TREE_NM
				      , '' AS UP_TREE_CD
				      , '' AS TELNO
				      , '' AS DEPT_CD
				      , '' AS JBGD_CD
				      , '' AS JBGD_NM
				      , '' AS USER_ID
				      , '' AS USER_NM
				      , (SELECT COUNT(*)
				           FROM TN_ORG
				          WHERE DEL_YN = 'N'
				            AND TI.INST_CD = INST_CD
				            AND (UP_DEPT_CD = '*' OR UP_DEPT_CD = TI.INST_CD)) AS CNT
				   FROM TN_INST TI
				  WHERE DEL_YN = 'N'
				    <if test="instSeCd != null and instSeCd != ''">AND INST_SE_CD = #{instSeCd}</if>
				    <if test="instTyCd != null and instTyCd != ''">AND INST_TY_CD = #{instTyCd}</if>
				    <if test="instNm != null and instNm != ''">AND INST_NM LIKE '%' || #{instNm} || '%'</if>
				    <if test="instCd != null and instCd != ''">AND INST_CD = #{instCd}</if>
				    <if test="deptNm != null and deptNm != ''">
					    AND INST_CD IN (SELECT INST_CD
					                      FROM TN_ORG TG
					                     WHERE DEL_YN = 'N'
					                       AND DEPT_NM LIKE '%' || #{deptNm} || '%')
				    </if>
				    <if test="userNm != null and userNm != ''">
				    	AND INST_CD IN (SELECT TG.INST_CD
				                      FROM TN_USER TU
				                         , TN_ORG TG
				                     WHERE TU.DEPT_CD = TG.DEPT_CD
				                       AND TU.DEL_YN = 'N'
				                       AND TG.DEL_YN = 'N'
				                       AND TU.USER_NM LIKE '%' || #{userNm} || '%')
				    </if>
				  UNION ALL
				 SELECT DEPT_CD AS TREE_CD
				      , DEPT_NM AS TREE_NM
				      , DECODE(UP_DEPT_CD, '*', INST_CD, UP_DEPT_CD) UP_TREE_CD
				      , '' AS TELNO
				      , DEPT_CD AS DEPT_CD
				      , '' AS JBGD_CD
				      , '' AS JBGD_NM
				      , '' AS USER_ID
				      , '' AS USER_NM
				      , (SELECT COUNT(*)
				           FROM TN_ORG ORG
				          WHERE ORG.DEL_YN = 'N'
				            AND ORG.UP_DEPT_CD = TG.DEPT_CD)
				      + (SELECT COUNT(*)
				      	   FROM TN_USER
				          WHERE DEL_YN = 'N'
				            AND TG.DEPT_CD = DEPT_CD) AS CNT
				   FROM TN_ORG TG
				  WHERE DEL_YN = 'N'
				    <if test="instClCd != null and instClCd != ''">AND INST_CL_CD = #{instClCd}</if>
				    <if test="deptNm != null and deptNm != ''">
				    	AND (DEPT_CD IN (SELECT UP_DEPT_CD 
				                      FROM TN_ORG TG
				                     WHERE DEL_YN = 'N'
				                       AND DEPT_NM LIKE '%' || #{deptNm} || '%')
				         OR DEPT_NM LIKE '%' || #{deptNm} || '%')
				    </if>
				    <if test="userNm != null and userNm != ''">
				    	AND DEPT_CD IN (SELECT DEPT_CD
				                      FROM TN_ORG TG
				                     WHERE DEL_YN = 'N'
				                     START WITH DEPT_CD = (SELECT DEPT_CD 
				                                             FROM TN_USER
				                                            WHERE DEL_YN = 'N'
				                                              AND USER_NM LIKE '%' || #{userNm} || '%')
								   CONNECT BY PRIOR UP_DEPT_CD = DEPT_CD)
				    </if>
				  UNION ALL
				 SELECT USER_ID AS TREE_CD
				      , USER_NM AS TREE_NM
				      , DEPT_CD AS UP_TREE_CD
				      , TELNO AS TELNO
				      , DEPT_CD AS DEPT_CD
				      , JBGD_CD AS JBGD_CD
				      , JBGD_NM AS JBGD_NM
				      , USER_ID AS USER_ID
				      , USER_NM AS USER_NM
				      , 0 AS CNT
				   FROM TN_USER
				  WHERE DEL_YN = 'N'
				    <if test="userSeCd != null and userSeCd != ''">AND USER_SE_CD = #{userSeCd}</if>
				    <if test="userNm != null and userNm != ''">AND USER_NM LIKE '%' || #{userNm} || '%'</if>
				    ) A
		  WHERE 1=1
		  START WITH A.UP_TREE_CD IS NULL
		CONNECT BY PRIOR A.TREE_CD = A.UP_TREE_CD
	</select>
	
	
    <!-- 
		조직 목록 조회 트리 (기관 + 조직 + 사용자)
		사용자 목록 조회
	-->
	<select id="selectDeptTreeUserList" parameterType="hashmap"  resultType="camelHashMap">
		 SELECT A.USER_ID
		      , A.USER_NM
		      , A.TELNO
		      , (SELECT B.INST_CD
		           FROM TN_ORG B
		          WHERE B.DEPT_CD = A.DEPT_CD) INST_CD
		      , (SELECT C.INST_NM
		           FROM TN_ORG B
		              , TN_INST C
		          WHERE B.DEPT_CD = A.DEPT_CD
		            AND B.INST_CD = C.INST_CD) INST_NM
		      , A.DEPT_CD
		      , (SELECT B.DEPT_NM
		           FROM TN_ORG B
		          WHERE B.DEPT_CD = A.DEPT_CD) DEPT_NM
		      , A.JBGD_CD
		      , A.JBGD_NM
		   FROM (SELECT INST_CD AS TREE_CD
				      , INST_NM AS TREE_NM
				      , '' AS UP_TREE_CD
				      , '' AS TELNO
				      , '' AS DEPT_CD
				      , '' AS JBGD_CD
				      , '' AS JBGD_NM
				      , '' AS USER_ID
				      , '' AS USER_NM
				   FROM TN_INST
				  WHERE DEL_YN = 'N'
				  UNION ALL
				 SELECT DEPT_CD AS TREE_CD
				      , DEPT_NM AS TREE_NM
				      , DECODE(UP_DEPT_CD, '*', INST_CD, UP_DEPT_CD) UP_TREE_CD
				      , '' AS TELNO
				      , DEPT_CD AS DEPT_CD
				      , '' AS JBGD_CD
				      , '' AS JBGD_NM
				      , '' AS USER_ID
				      , '' AS USER_NM
				   FROM TN_ORG
				  WHERE DEL_YN = 'N'
				  UNION ALL
				 SELECT USER_ID AS TREE_CD
				      , USER_NM AS TREE_NM
				      , DEPT_CD AS UP_TREE_CD
				      , TELNO AS TELNO
				      , DEPT_CD AS DEPT_CD
				      , JBGD_CD AS JBGD_CD
				      , JBGD_NM AS JBGD_NM
				      , USER_ID AS USER_ID
				      , USER_NM AS USER_NM
				   FROM TN_USER
				  WHERE DEL_YN = 'N'
				    <if test="userSeCd != null and userSeCd != ''">AND USER_SE_CD = #{userSeCd}</if>
				    ) A
		  WHERE 1=1
		    AND USER_ID IS NOT NULL
		  START WITH A.TREE_CD = #{selectCode}
		CONNECT BY PRIOR A.TREE_CD = A.UP_TREE_CD
	</select>
	
	
	<!-- 
		기관 스키마 조회
	-->
	<select id="selectInstSchm" parameterType="hashmap"  resultType="camelHashMap">
		SELECT INST_CD 
		     , INST_NM
		     , INST_ENG_NM
		     , INST_ENG_ABBR_NM
		     , INST_SCHM_NM
		  FROM TN_INST
		 WHERE 1=1
		   AND INST_CD = #{instCd}
		   AND DEL_YN = 'N'
	</select>
	
 </mapper>